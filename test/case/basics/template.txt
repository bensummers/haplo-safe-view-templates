
template:X() includes another template. View doesn't move (unlike languages like Handlebars). HTML inside isn't escaped.

---

<div> <span class="hello"> template:template1() </span> </div>

---
{"value1":"one"}
---
<div><span class=hello><b>Included Template 1: one</b></span></div>

---
{"value1":"one","template1":{"value1":"two"}}
---
<div><span class=hello><b>Included Template 1: one</b></span></div>


---
NEW TEMPLATE: enclosing view works in included templates
---
<div> template:template2() </div>

---
{"rootValue":"ABC","nested":{"rootValue":"XYZ"}}
---
<div><i>Included Template 2: ABC</i></div>


---
NEW TEMPLATE: include() includes uses the current view as the root of the template.
---
<div>
    within(nested) {
        template:template1()
    }
</div>

---
{"nested":{"value1":"two"},"value1":"root"}
---
<div><b>Included Template 1: two</b></div>


---
NEW TEMPLATE: Templates can include other templates and call functions
---
<div>
    template:template3()
</div>
---
{"value1": "hello"}
---
<div><span>T3 <b>Included Template 1: hello</b> - TEST GENERIC FUNCTION RENDER</span></div>

---
NEW TEMPLATE: include() throws an exception if the template isn't known
---
<div> template:unknown-template() </div>

---
{}
---
RENDER ERROR: When rendering template 'test-case': Could not find included template 'unknown-template'


---
NEW TEMPLATE: Attempt to include template which doesn't exist in included template blames the right template
---
<div>
    template:template4()
</div>
---
{}
---
RENDER ERROR: When rendering template 'template4': Could not find included template 'unknown-template'


---
NEW TEMPLATE: Too much temple nesting results in exception
---
<div> template:self-inclusion() </div>
---
{}
---
RENDER ERROR: When rendering template 'self-inclusion': Template rendering nesting depth exceeded.
